{"version":3,"sources":["dummy/tests/blanket-options.js","dummy/tests/helpers/destroy-app.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/start-app.js","dummy/tests/integration/components/ember-frost-info-bar-test.js","dummy/tests/test-helper.js","dummy/tests/unit/components/info-bar-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('dummy/tests/blanket-options', ['exports'], function (exports) {\n  /* globals blanket, module */\n\n  var options = {\n    modulePrefix: 'ember-frost-info-bar',\n    filter: '//.*ember-frost-info-bar/.*/',\n    antifilter: '//.*(tests|template).*/',\n    loaderExclusions: [],\n    enableCoverage: true,\n    cliOptions: {\n      reporters: ['lcov'],\n      autostart: true,\n      lcovOptions: {\n        outputFile: 'coverage/lcov.info',\n        renamer: function renamer(fileName) {\n          return fileName.replace('ember-frost-info-bar', 'addon') + '.js';\n        }\n      }\n    }\n  };\n\n  if (typeof exports === 'undefined') {\n    blanket.options(options);\n  } else {\n    module.exports = options;\n  }\n});","define('dummy/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('dummy/tests/helpers/resolver', ['exports', 'dummy/resolver', 'dummy/config/environment'], function (exports, _dummyResolver, _dummyConfigEnvironment) {\n\n  var resolver = _dummyResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _dummyConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _dummyConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', 'dummy/app', 'dummy/config/environment'], function (exports, _ember, _dummyApp, _dummyConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _dummyConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override\n\n    _ember['default'].run(function () {\n      application = _dummyApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('dummy/tests/integration/components/ember-frost-info-bar-test', ['exports', 'chai', 'ember-hook', 'ember-mocha', 'mocha'], function (exports, _chai, _emberHook, _emberMocha, _mocha) {\n\n  var testTemplate = Ember.HTMLBars.template((function () {\n    var child0 = (function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.6.2',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 3,\n                'column': 4\n              },\n              'end': {\n                'line': 5,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      Yielded icon\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      var child1 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.6.2',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 6,\n                'column': 4\n              },\n              'end': {\n                'line': 8,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      Yielded title\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      var child2 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.6.2',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 9,\n                'column': 4\n              },\n              'end': {\n                'line': 11,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      Yielded summary\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      var child3 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.6.2',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 12,\n                'column': 4\n              },\n              'end': {\n                'line': 14,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      Yielded controls\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      var child4 = (function () {\n        return {\n          meta: {\n            'fragmentReason': false,\n            'revision': 'Ember@2.6.2',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 15,\n                'column': 4\n              },\n              'end': {\n                'line': 17,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n            return morphs;\n          },\n          statements: [['inline', 'action.button', [], ['icon', 'infobar-create', 'text', 'Click me!'], ['loc', [null, [16, 6], [16, 62]]]]],\n          locals: ['action'],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'fragmentReason': false,\n          'revision': 'Ember@2.6.2',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 2,\n              'column': 2\n            },\n            'end': {\n              'line': 18,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(5);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          morphs[1] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);\n          morphs[3] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n          morphs[4] = dom.createMorphAt(fragment, 4, 4, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['block', 'block-slot', ['icon'], [], 0, null, ['loc', [null, [3, 4], [5, 19]]]], ['block', 'block-slot', ['title'], [], 1, null, ['loc', [null, [6, 4], [8, 19]]]], ['block', 'block-slot', ['summary'], [], 2, null, ['loc', [null, [9, 4], [11, 19]]]], ['block', 'block-slot', ['controls'], [], 3, null, ['loc', [null, [12, 4], [14, 19]]]], ['block', 'block-slot', ['actions'], [], 4, null, ['loc', [null, [15, 4], [17, 19]]]]],\n        locals: [],\n        templates: [child0, child1, child2, child3, child4]\n      };\n    })();\n\n    return {\n      meta: {\n        'fragmentReason': {\n          'name': 'missing-wrapper',\n          'problems': ['wrong-type']\n        },\n        'revision': 'Ember@2.6.2',\n        'loc': {\n          'source': null,\n          'start': {\n            'line': 1,\n            'column': 0\n          },\n          'end': {\n            'line': 18,\n            'column': 21\n          }\n        }\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createTextNode('\\n');\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment('');\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n        dom.insertBoundary(fragment, null);\n        return morphs;\n      },\n      statements: [['block', 'frost-info-bar', [], ['hook', ['subexpr', '@mut', [['get', 'hook', ['loc', [null, [2, 25], [2, 29]]]]], [], []]], 0, null, ['loc', [null, [2, 2], [18, 21]]]]],\n      locals: [],\n      templates: [child0]\n    };\n  })());\n\n  (0, _emberMocha.describeComponent)('ember-frost-info-bar', 'Integration: EmberFrostInfoBarComponent', {\n    integration: true\n  }, function () {\n    var props = undefined;\n    (0, _mocha.beforeEach)(function () {\n      (0, _emberHook.initialize)();\n      props = {\n        hook: 'my-info-bar'\n      };\n      this.setProperties(props);\n      this.render(testTemplate);\n    });\n\n    (0, _emberMocha.it)('has a default hook name', function () {\n      this.render(Ember.HTMLBars.template((function () {\n        return {\n          meta: {\n            'fragmentReason': {\n              'name': 'missing-wrapper',\n              'problems': ['wrong-type']\n            },\n            'revision': 'Ember@2.6.2',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 1,\n                'column': 0\n              },\n              'end': {\n                'line': 3,\n                'column': 6\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('\\n        ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n      ');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(1);\n            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n            return morphs;\n          },\n          statements: [['content', 'frost-info-bar', ['loc', [null, [2, 8], [2, 26]]]]],\n          locals: [],\n          templates: []\n        };\n      })()));\n\n      (0, _chai.expect)((0, _emberHook.$hook)('info-bar').hasClass('frost-info-bar')).to.be['true'];\n    });\n\n    (0, _emberMocha.it)('has a hook for icon', function () {\n      (0, _chai.expect)((0, _emberHook.$hook)('my-info-bar-icon').text().trim()).to.eql('Yielded icon');\n    });\n\n    (0, _emberMocha.it)('has a hook for title', function () {\n      (0, _chai.expect)((0, _emberHook.$hook)('my-info-bar-title').text().trim()).to.eql('Yielded title');\n    });\n\n    (0, _emberMocha.it)('has a hook for summary', function () {\n      (0, _chai.expect)((0, _emberHook.$hook)('my-info-bar-summary').text().trim()).to.eql('Yielded summary');\n    });\n\n    (0, _emberMocha.it)('has a hook for controls', function () {\n      (0, _chai.expect)((0, _emberHook.$hook)('my-info-bar-controls').text().trim()).to.eql('Yielded controls');\n    });\n\n    (0, _emberMocha.it)('has a hook for actions', function () {\n      (0, _chai.expect)((0, _emberHook.$hook)('my-info-bar-action').text().trim()).to.eql('Click me!');\n    });\n  });\n});","define('dummy/tests/test-helper', ['exports', 'dummy/tests/helpers/resolver', 'ember-mocha'], function (exports, _dummyTestsHelpersResolver, _emberMocha) {\n\n  (0, _emberMocha.setResolver)(_dummyTestsHelpersResolver['default']);\n});","define('dummy/tests/unit/components/info-bar-test', ['exports', 'ember-mocha', 'mocha'], function (exports, _emberMocha, _mocha) {\n  var expect = chai.expect;\n\n  (0, _emberMocha.describeComponent)('frost-info-bar', 'FrostInfoBarComponent', {\n    unit: true\n  }, function () {\n    var component = undefined;\n\n    (0, _mocha.beforeEach)(function () {\n      component = this.subject();\n    });\n\n    (0, _mocha.it)('includes className frost-info-bar', function () {\n      expect(component.classNames).to.include('frost-info-bar');\n    });\n  });\n});","/* jshint ignore:start */\n\nrequire('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChfA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}